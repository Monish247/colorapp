{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://D%3A/dotnet_react_project/API-UI/webui/colors-app/pages/_app.tsx"],"sourcesContent":["import '../styles/globals.css';\r\nimport type { AppProps } from 'next/app';\r\n\r\nfunction MyApp({ Component, pageProps }: AppProps) {\r\n  return <Component {...pageProps} />;\r\n}\r\n\r\nexport default MyApp;"],"names":[],"mappings":";;;;;;AAGA,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAY;IAC/C,qBAAO,qKAAC;QAAW,GAAG,SAAS;;;;;;AACjC;uCAEe","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file://D%3A/dotnet_react_project/API-UI/webui/colors-app/services/api.ts"],"sourcesContent":["import { Color, ColorFormData } from '../interfaces';\r\n\r\nconst API_URL = 'http://localhost:5000/api'; // Adjust this to your API URL\r\n\r\nexport const fetchColors = async (): Promise<Color[]> => {\r\n  const response = await fetch(`${API_URL}/colors`);\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch colors');\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const addColor = async (colorData: ColorFormData): Promise<Color> => {\r\n  const response = await fetch(`${API_URL}/colors`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(colorData),\r\n  });\r\n  \r\n  if (!response.ok) {\r\n    throw new Error('Failed to add color');\r\n  }\r\n  \r\n  return response.json();\r\n};"],"names":[],"mappings":";;;;AAEA,MAAM,UAAU,6BAA6B,8BAA8B;AAEpE,MAAM,cAAc;IACzB,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,OAAO,CAAC;IAChD,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,WAAW,OAAO;IAC7B,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,OAAO,CAAC,EAAE;QAChD,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file://D%3A/dotnet_react_project/API-UI/webui/colors-app/components/ColorList.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Color } from '../interfaces';\r\nimport { fetchColors } from '../services/api';\r\n\r\nconst ColorList = () => {\r\n  const [colors, setColors] = useState<Color[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const getColors = async () => {\r\n      try {\r\n        const data = await fetchColors();\r\n        setColors(data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Failed to fetch colors. Please try again later.' + err);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getColors();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading colors...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"color-list\">\r\n      <h2>Available Colors</h2>\r\n      {colors.length === 0 ? (\r\n        <p>No colors found. Add some below!</p>\r\n      ) : (\r\n        <div className=\"grid\">\r\n          {colors.map((color) => (\r\n            <div key={color.id} className=\"color-card\">\r\n              <div \r\n                className=\"color-sample\" \r\n                style={{ backgroundColor: color.hexCode }}\r\n              />\r\n              <div className=\"color-details\">\r\n                <h3>{color.name}</h3>\r\n                <p>{color.hexCode}</p>\r\n                <p className=\"date\">Added: {new Date(color.createdAt).toLocaleDateString()}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorList;"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,YAAY;IAChB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,MAAM,OAAO,MAAM,CAAA,GAAA,wGAAA,CAAA,cAAW,AAAD;gBAC7B,UAAU;gBACV,WAAW;YACb,EAAE,OAAO,KAAK;gBACZ,SAAS,oDAAoD;gBAC7D,WAAW;YACb;QACF;QAEA;IACF,GAAG,EAAE;IAEL,IAAI,SAAS,qBAAO,qKAAC;kBAAI;;;;;;IACzB,IAAI,OAAO,qBAAO,qKAAC;QAAI,WAAU;kBAAS;;;;;;IAE1C,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;0BAAG;;;;;;YACH,OAAO,MAAM,KAAK,kBACjB,qKAAC;0BAAE;;;;;qCAEH,qKAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAC,sBACX,qKAAC;wBAAmB,WAAU;;0CAC5B,qKAAC;gCACC,WAAU;gCACV,OAAO;oCAAE,iBAAiB,MAAM,OAAO;gCAAC;;;;;;0CAE1C,qKAAC;gCAAI,WAAU;;kDACb,qKAAC;kDAAI,MAAM,IAAI;;;;;;kDACf,qKAAC;kDAAG,MAAM,OAAO;;;;;;kDACjB,qKAAC;wCAAE,WAAU;;4CAAO;4CAAQ,IAAI,KAAK,MAAM,SAAS,EAAE,kBAAkB;;;;;;;;;;;;;;uBARlE,MAAM,EAAE;;;;;;;;;;;;;;;;AAgB9B;uCAEe","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file://D%3A/dotnet_react_project/API-UI/webui/colors-app/components/ColorForm.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { ColorFormData } from '../interfaces';\r\nimport { addColor } from '../services/api';\r\n\r\ninterface ColorFormProps {\r\n  onColorAdded: () => void;\r\n}\r\n\r\nconst ColorForm = ({ onColorAdded }: ColorFormProps) => {\r\n  const [formData, setFormData] = useState<ColorFormData>({\r\n    name: '',\r\n    hexCode: '#000000',\r\n  });\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      await addColor(formData);\r\n      setFormData({ name: '', hexCode: '#000000' });\r\n      onColorAdded();\r\n    } catch (err) {\r\n      setError('Failed to add color. Please try again.' + err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"color-form\">\r\n      <h2>Add New Color</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Color Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"hexCode\">Color (HEX Code)</label>\r\n          <div className=\"color-picker\">\r\n            <input\r\n              type=\"color\"\r\n              id=\"hexCode\"\r\n              name=\"hexCode\"\r\n              value={formData.hexCode}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"hexCode\"\r\n              value={formData.hexCode}\r\n              onChange={handleChange}\r\n              pattern=\"^#[0-9A-Fa-f]{6}$\"\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {error && <div className=\"error\">{error}</div>}\r\n\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? 'Adding...' : 'Add Color'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorForm;"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAMA,MAAM,YAAY,CAAC,EAAE,YAAY,EAAkB;IACjD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAiB;QACtD,MAAM;QACN,SAAS;IACX;IACA,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,eAAe,CAAC;QACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,YAAY,CAAC,OAAS,CAAC;gBACrB,GAAG,IAAI;gBACP,CAAC,KAAK,EAAE;YACV,CAAC;IACH;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,WAAW;QACX,SAAS;QAET,IAAI;YACF,MAAM,CAAA,GAAA,wGAAA,CAAA,WAAQ,AAAD,EAAE;YACf,YAAY;gBAAE,MAAM;gBAAI,SAAS;YAAU;YAC3C;QACF,EAAE,OAAO,KAAK;YACZ,SAAS,2CAA2C;QACtD,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;0BAAG;;;;;;0BACJ,qKAAC;gBAAK,UAAU;;kCACd,qKAAC;wBAAI,WAAU;;0CACb,qKAAC;gCAAM,SAAQ;0CAAO;;;;;;0CACtB,qKAAC;gCACC,MAAK;gCACL,IAAG;gCACH,MAAK;gCACL,OAAO,SAAS,IAAI;gCACpB,UAAU;gCACV,QAAQ;;;;;;;;;;;;kCAIZ,qKAAC;wBAAI,WAAU;;0CACb,qKAAC;gCAAM,SAAQ;0CAAU;;;;;;0CACzB,qKAAC;gCAAI,WAAU;;kDACb,qKAAC;wCACC,MAAK;wCACL,IAAG;wCACH,MAAK;wCACL,OAAO,SAAS,OAAO;wCACvB,UAAU;wCACV,QAAQ;;;;;;kDAEV,qKAAC;wCACC,MAAK;wCACL,MAAK;wCACL,OAAO,SAAS,OAAO;wCACvB,UAAU;wCACV,SAAQ;wCACR,QAAQ;;;;;;;;;;;;;;;;;;oBAKb,uBAAS,qKAAC;wBAAI,WAAU;kCAAS;;;;;;kCAElC,qKAAC;wBAAO,MAAK;wBAAS,UAAU;kCAC7B,UAAU,cAAc;;;;;;;;;;;;;;;;;;AAKnC;uCAEe","debugId":null}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"sources":["file://D%3A/dotnet_react_project/API-UI/webui/colors-app/pages/index.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport ColorList from '../components/ColorList';\r\nimport ColorForm from '../components/ColorForm';\r\n\r\nexport default function Home() {\r\n  const [refreshList, setRefreshList] = useState<boolean>(false);\r\n\r\n  const handleColorAdded = () => {\r\n    setRefreshList(!refreshList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header>\r\n        <h1>Color Manager</h1>\r\n      </header>\r\n      \r\n      <main>\r\n        <ColorList key={refreshList.toString()} />\r\n        <ColorForm onColorAdded={handleColorAdded} />\r\n      </main>\r\n      \r\n      <footer>\r\n        <p>Color Manager App - Built with Next.js and .NET Core 8</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEe,SAAS;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAW;IAExD,MAAM,mBAAmB;QACvB,eAAe,CAAC;IAClB;IAEA,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;0BACC,cAAA,qKAAC;8BAAG;;;;;;;;;;;0BAGN,qKAAC;;kCACC,qKAAC,iHAAA,CAAA,UAAS,MAAM,YAAY,QAAQ;;;;;kCACpC,qKAAC,iHAAA,CAAA,UAAS;wBAAC,cAAc;;;;;;;;;;;;0BAG3B,qKAAC;0BACC,cAAA,qKAAC;8BAAE;;;;;;;;;;;;;;;;;AAIX","debugId":null}}]
}